diff --git a/node_modules/react-native-gifted-chat/lib/Bubble.js b/node_modules/react-native-gifted-chat/lib/Bubble.js
index e9eb92a..4bee76e 100644
--- a/node_modules/react-native-gifted-chat/lib/Bubble.js
+++ b/node_modules/react-native-gifted-chat/lib/Bubble.js
@@ -10,6 +10,7 @@ import { MessageAudio } from './MessageAudio';
 import { Time } from './Time';
 import Color from './Color';
 import { StylePropType, isSameUser, isSameDay } from './utils';
+import LinearGradient from 'react-native-linear-gradient';
 const styles = {
     left: StyleSheet.create({
         container: {
@@ -135,39 +136,39 @@ class Bubble extends React.Component {
         const { currentMessage, onQuickReply, nextMessage, renderQuickReplySend, quickReplyStyle, quickReplyTextStyle, quickReplyContainerStyle, } = this.props;
         if (currentMessage && currentMessage.quickReplies) {
             const {
-            /* eslint-disable @typescript-eslint/no-unused-vars */
-            containerStyle, wrapperStyle, 
-            /* eslint-enable @typescript-eslint/no-unused-vars */
-            ...quickReplyProps } = this.props;
+                /* eslint-disable @typescript-eslint/no-unused-vars */
+                containerStyle, wrapperStyle,
+                /* eslint-enable @typescript-eslint/no-unused-vars */
+                ...quickReplyProps } = this.props;
             if (this.props.renderQuickReplies)
                 return this.props.renderQuickReplies(quickReplyProps);
-            return (<QuickReplies currentMessage={currentMessage} onQuickReply={onQuickReply} renderQuickReplySend={renderQuickReplySend} quickReplyStyle={quickReplyStyle} quickReplyTextStyle={quickReplyTextStyle} quickReplyContainerStyle={quickReplyContainerStyle} nextMessage={nextMessage}/>);
+            return (<QuickReplies currentMessage={currentMessage} onQuickReply={onQuickReply} renderQuickReplySend={renderQuickReplySend} quickReplyStyle={quickReplyStyle} quickReplyTextStyle={quickReplyTextStyle} quickReplyContainerStyle={quickReplyContainerStyle} nextMessage={nextMessage} />);
         }
         return null;
     }
     renderMessageText() {
         if (this.props.currentMessage && this.props.currentMessage.text) {
             const {
-            /* eslint-disable @typescript-eslint/no-unused-vars */
-            containerStyle, wrapperStyle, optionTitles, 
-            /* eslint-enable @typescript-eslint/no-unused-vars */
-            ...messageTextProps } = this.props;
+                /* eslint-disable @typescript-eslint/no-unused-vars */
+                containerStyle, wrapperStyle, optionTitles,
+                /* eslint-enable @typescript-eslint/no-unused-vars */
+                ...messageTextProps } = this.props;
             if (this.props.renderMessageText)
                 return this.props.renderMessageText(messageTextProps);
-            return <MessageText {...messageTextProps}/>;
+            return <MessageText {...messageTextProps} />;
         }
         return null;
     }
     renderMessageImage() {
         if (this.props.currentMessage && this.props.currentMessage.image) {
             const {
-            /* eslint-disable @typescript-eslint/no-unused-vars */
-            containerStyle, wrapperStyle, 
-            /* eslint-enable @typescript-eslint/no-unused-vars */
-            ...messageImageProps } = this.props;
+                /* eslint-disable @typescript-eslint/no-unused-vars */
+                containerStyle, wrapperStyle,
+                /* eslint-enable @typescript-eslint/no-unused-vars */
+                ...messageImageProps } = this.props;
             if (this.props.renderMessageImage)
                 return this.props.renderMessageImage(messageImageProps);
-            return <MessageImage {...messageImageProps}/>;
+            return <MessageImage {...messageImageProps} />;
         }
         return null;
     }
@@ -175,10 +176,10 @@ class Bubble extends React.Component {
         if (!this.props.currentMessage?.video)
             return null;
         const {
-        /* eslint-disable @typescript-eslint/no-unused-vars */
-        containerStyle, wrapperStyle, 
-        /* eslint-enable @typescript-eslint/no-unused-vars */
-        ...messageVideoProps } = this.props;
+            /* eslint-disable @typescript-eslint/no-unused-vars */
+            containerStyle, wrapperStyle,
+            /* eslint-enable @typescript-eslint/no-unused-vars */
+            ...messageVideoProps } = this.props;
         if (this.props.renderMessageVideo)
             return this.props.renderMessageVideo(messageVideoProps);
         return <MessageVideo />;
@@ -187,10 +188,10 @@ class Bubble extends React.Component {
         if (!this.props.currentMessage?.audio)
             return null;
         const {
-        /* eslint-disable @typescript-eslint/no-unused-vars */
-        containerStyle, wrapperStyle, 
-        /* eslint-enable @typescript-eslint/no-unused-vars */
-        ...messageAudioProps } = this.props;
+            /* eslint-disable @typescript-eslint/no-unused-vars */
+            containerStyle, wrapperStyle,
+            /* eslint-enable @typescript-eslint/no-unused-vars */
+            ...messageAudioProps } = this.props;
         if (this.props.renderMessageAudio)
             return this.props.renderMessageAudio(messageAudioProps);
         return <MessageAudio />;
@@ -207,28 +208,28 @@ class Bubble extends React.Component {
         if (currentMessage &&
             (currentMessage.sent || currentMessage.received || currentMessage.pending))
             return (<View style={styles.content.tickView}>
-          {!!currentMessage.sent && (<Text style={[styles.content.tick, this.props.tickStyle]}>
-              {'âœ“'}
-            </Text>)}
-          {!!currentMessage.received && (<Text style={[styles.content.tick, this.props.tickStyle]}>
-              {'âœ“'}
-            </Text>)}
-          {!!currentMessage.pending && (<Text style={[styles.content.tick, this.props.tickStyle]}>
-              {'ðŸ•“'}
-            </Text>)}
-        </View>);
+                {!!currentMessage.sent && (<Text style={[styles.content.tick, this.props.tickStyle]}>
+                    {'âœ“'}
+                </Text>)}
+                {!!currentMessage.received && (<Text style={[styles.content.tick, this.props.tickStyle]}>
+                    {'âœ“'}
+                </Text>)}
+                {!!currentMessage.pending && (<Text style={[styles.content.tick, this.props.tickStyle]}>
+                    {'ðŸ•“'}
+                </Text>)}
+            </View>);
         return null;
     }
     renderTime() {
         if (this.props.currentMessage && this.props.currentMessage.createdAt) {
             const {
-            /* eslint-disable @typescript-eslint/no-unused-vars */
-            containerStyle, wrapperStyle, textStyle, 
-            /* eslint-enable @typescript-eslint/no-unused-vars */
-            ...timeProps } = this.props;
+                /* eslint-disable @typescript-eslint/no-unused-vars */
+                containerStyle, wrapperStyle, textStyle,
+                /* eslint-enable @typescript-eslint/no-unused-vars */
+                ...timeProps } = this.props;
             if (this.props.renderTime)
                 return this.props.renderTime(timeProps);
-            return <Time {...timeProps}/>;
+            return <Time {...timeProps} />;
         }
         return null;
     }
@@ -240,11 +241,11 @@ class Bubble extends React.Component {
             if (renderUsername)
                 return renderUsername(currentMessage.user);
             return (<View style={styles.content.usernameView}>
-          <Text style={[styles.content.username, this.props.usernameStyle]}>
-            {'~ '}
-            {currentMessage.user.name}
-          </Text>
-        </View>);
+                <Text style={[styles.content.username, this.props.usernameStyle]}>
+                    {'~ '}
+                    {currentMessage.user.name}
+                </Text>
+            </View>);
         }
         return null;
     }
@@ -256,48 +257,51 @@ class Bubble extends React.Component {
     renderBubbleContent() {
         return this.props.isCustomViewBottom
             ? (<View>
-          {this.renderMessageImage()}
-          {this.renderMessageVideo()}
-          {this.renderMessageAudio()}
-          {this.renderMessageText()}
-          {this.renderCustomView()}
-        </View>)
+                {this.renderMessageImage()}
+                {this.renderMessageVideo()}
+                {this.renderMessageAudio()}
+                {this.renderMessageText()}
+                {this.renderCustomView()}
+            </View>)
             : (<View>
-          {this.renderCustomView()}
-          {this.renderMessageImage()}
-          {this.renderMessageVideo()}
-          {this.renderMessageAudio()}
-          {this.renderMessageText()}
-        </View>);
+                {this.renderCustomView()}
+                {this.renderMessageImage()}
+                {this.renderMessageVideo()}
+                {this.renderMessageAudio()}
+                {this.renderMessageText()}
+            </View>);
     }
     render() {
         const { position, containerStyle, wrapperStyle, bottomContainerStyle } = this.props;
-        return (<View style={[
+        const Wrapper = position === "left" ? View : LinearGradient
+        return (
+            <View style={[
                 styles[position].container,
                 containerStyle && containerStyle[position],
             ]}>
-        <View style={[
-                styles[position].wrapper,
-                this.styledBubbleToNext(),
-                this.styledBubbleToPrevious(),
-                wrapperStyle && wrapperStyle[position],
-            ]}>
-          <TouchableWithoutFeedback onPress={this.onPress} onLongPress={this.onLongPress} accessibilityRole='text' {...this.props.touchableProps}>
-            <View>
-              {this.renderBubbleContent()}
-              <View style={[
-                styles[position].bottom,
-                bottomContainerStyle && bottomContainerStyle[position],
-            ]}>
-                {this.renderUsername()}
-                {this.renderTime()}
-                {this.renderTicks()}
-              </View>
-            </View>
-          </TouchableWithoutFeedback>
-        </View>
-        {this.renderQuickReplies()}
-      </View>);
+                <Wrapper colors={["#4A3CB080", "#844AB2"]} style={[
+                    styles[position].wrapper,
+                    this.styledBubbleToNext(),
+                    this.styledBubbleToPrevious(),
+                    wrapperStyle && wrapperStyle[position],
+                    { padding: 0 }
+                ]}>
+                    <TouchableWithoutFeedback onPress={this.onPress} onLongPress={this.onLongPress} accessibilityRole='text' {...this.props.touchableProps}>
+                        <View>
+                            {this.renderBubbleContent()}
+                            <View style={[
+                                styles[position].bottom,
+                                bottomContainerStyle && bottomContainerStyle[position],
+                            ]}>
+                                {this.renderUsername()}
+                                {this.renderTime()}
+                                {this.renderTicks()}
+                            </View>
+                        </View>
+                    </TouchableWithoutFeedback>
+                </Wrapper>
+                {this.renderQuickReplies()}
+            </View>);
     }
 }
 Bubble.contextType = GiftedChatContext;
